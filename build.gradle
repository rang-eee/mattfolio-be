plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.2'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.colon'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}


repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-batch'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

	// implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	// implementation 'org.springframework.boot:spring-boot-starter-cache'
	
	// security
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	
	// jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'

	// querydsl
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
	
	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	
	// database
	implementation 'org.mariadb.jdbc:mariadb-java-client:3.5.2'
	
	// sql logger
	implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16' //SQL 로그
	
	// poi excel
	implementation 'org.apache.poi:poi:5.2.5'
	implementation 'org.apache.poi:poi-scratchpad:5.2.5'
	implementation 'org.apache.poi:poi-ooxml:5.2.5'
	
	//swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.5'

	
	implementation 'org.apache.commons:commons-text:1.10.0'
	implementation 'commons-io:commons-io:2.14.0'
	implementation 'org.apache.tika:tika-core:2.9.3'
	
	
	implementation 'org.apache.httpcomponents:httpclient:4.5.13'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5-jakarta:2.15.3'
	
	
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	
	
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.springframework.batch:spring-batch-test'
}

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
	useJUnitPlatform()
}

def querydslDir = 'src/main/generated'

tasks.withType(JavaCompile).configureEach {
	options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
}

clean {
	delete file(querydslDir)
}