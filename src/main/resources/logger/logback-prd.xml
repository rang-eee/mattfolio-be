<?xml version="1.0" encoding="UTF-8"?>
<!-- 15초마다 설정 파일의 변경을 확인 하여 변경시 갱신 -->
<configuration scan="true" scanPeriod="15 seconds">
    
    <!-- 프로퍼티 파일 -->
    <property resource="logger/logback-prd.properties"/>
    <!-- 로그 파일 경로 : 프로퍼티 참조 -->
    <property name="LOG_PATH" value="${log.path}"/>
    <!-- 로그 파일 명 : 프로퍼티 참조 -->
    <property name="LOG_FILE_NAME" value="${log.file.name.app}"/>
    <!-- 에러 로그 파일 경로 : 프로퍼티 참조 -->
    <property name="ERR_LOG_FILE_NAME" value="${log.file.name.error}"/>
    <!-- 로그 파일 최대 용량 : 프로퍼티 참조 -->
    <property name="LOG_FILE_MAX_FILE_SIZE" value="${log.file.maxFileSize}"/>
    <!-- 로그 파일 최대 보관일 : 프로퍼티 참조 -->
    <property name="LOG_FILE_MAX_HISTORY" value="${log.file.maxHistory}"/>
    <!-- 로그 패턴(디자인) -->
    <property name="LOG_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %5level %logger - %msg%n"/>
    
    
    <!-- log4jdbc 옵션 설정 -->
    <logger name="jdbc" level="OFF" appender-ref="CONSOLE"/>
    <!-- connection open close 로깅 여부 -->
    <logger name="jdbc.connection" level="ERROR" appender-ref="CONSOLE"/>
    <!-- SQL문만 로깅할지 여부 -->
    <logger name="jdbc.sqlonly" level="OFF" appender-ref="CONSOLE"/>
    <!-- 쿼리문 수행에 걸린 시간 로깅 -->
    <logger name="jdbc.sqltiming" level="OFF" appender-ref="CONSOLE"/>
    <!-- ResultSet외 모든 JDBC 호출 정보를 로깅할지 여부 -->
    <logger name="jdbc.audit" level="OFF" appender-ref="CONSOLE"/>
    <!-- ResultSet 포함 모든 JDBC 호출 정보를 로깅 -->
    <logger name="jdbc.resultset" level="OFF" appender-ref="CONSOLE" />
    <!-- ResultSet 포함 모든 JDBC 호출 정보를 테이블 형태로 로깅 -->
    <logger name="jdbc.resultsettable" level="OFF" appender-ref="CONSOLE"/>
    
    
    <!-- Server Log Config -->
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter" />
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <!-- 출력패턴 설정-->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <charset>UTF-8</charset>
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>
    </appender>
    
    
    <!-- Log File -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender" level="WARN">
        <!-- 파일경로 설정 -->
        <file>${LOG_PATH}/${LOG_FILE_NAME}.log</file>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <charset>UTF-8</charset>
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>
        <!-- Rolling 정책 (파일 관리설정) -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/${LOG_FILE_NAME}.%d{yyyy-MM-dd}_%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>${LOG_FILE_MAX_FILE_SIZE}</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>${LOG_FILE_MAX_HISTORY}</maxHistory>
        </rollingPolicy>
    </appender>
    
    
    <!-- Error Log File -->
    <appender name="ERR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender" level="ERROR">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <!-- 에러로그를 설정하고 로그의 레벨이 맞으면 onMatch, 아니라면 onMismatch  -->
            <level>error</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <file>${LOG_PATH}/${ERR_LOG_FILE_NAME}.log</file>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <charset>UTF-8</charset>
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>
        <!-- Rolling 정책 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/${ERR_LOG_FILE_NAME}.%d{yyyy-MM-dd}_%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>${LOG_FILE_MAX_FILE_SIZE}</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>${LOG_FILE_MAX_HISTORY}</maxHistory>
        </rollingPolicy>
    </appender>
    
    
    <!-- Root -->
    <root level="WARN">
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="FILE"/>
        <appender-ref ref="ERR_FILE"/>
    </root>
</configuration>